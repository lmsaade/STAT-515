[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Main",
    "section": "",
    "text": "Original Visual\n\n\n\nOriginal Mike Glennon Visual from https://viz.wtf/\n\n\nThis visual is a humorous depiction of Mike Glennon’s earnings in the NFL categorized by the different teams he’s played on. While it’s most likely intended to be funny and not exactly helpful, there are a couple of different ways we could better communicate the original author’s message. There are a couple of things that could be improved from the original visual. The bars are not ordered in any fashion; ordering the bars could improve reader readability and clarity. The other problem is that the bars are not clearly proportional to each other. Without a y-axis and straight lines, it’s hard to tell that the author intended for the different team sections to be proportional and could further confuse readers.\nSpecial Efforts\nFor this project, a couple of steps had to be taken. I had to create my own Excel file since the original source on X had been deleted. The way I originally structured my dataset was “wide”. For my graphics, I would need to make my data “long” with the pivot_longer function from dplyr. Other data manipulation tasks included changing the data types from characters to numerical. Further adding a Player column to the dataset was critical to make the final 100% stacked bar chart.\nWhen it came to the actual visualizations, I chose the colors according to the team colors and used plotly to make one of the graphs interactive with a customized tooltip using text = paste() (Holtz 2025). When the user hovers over the bars in the second graphic, it displays the customized text I set displaying the team name, the amount Mike Glennon earned from that team in USD, and the percentage relative to the other teams.\nFor the redesign, I made a new Excel sheet remaking the Sportrac.com datasheet. I took similar steps to the other graphs, like customized tooltips, color choice, and interactive graphics. However, this one was a little different since there was more intricate layering with the bar and line graphs. I originally was not going to include the geom_point, but at one point my line graph disappeared, so I brought in geom_point to bring it back and improve readability.\nRedesign 1 \nThis is my first redesign of the original Mike Glennon visual. It’s a classic bar chart with each bar broken out by team with the appropriate team color and the dollar amount as a label on top. The bars are sorted from smallest to largest earnings amount. There is a y-axis to help with the positioning for clarity and readability.\nRedesign 2\n\n\n\n\n\n\nThis is a bar chart that is more closely aligned with the author’s original graphic. I modified this by making the bars stack up to 100% and made the graphic interactive with plotly and a customized tooltip.\nConcluding Remarks The data itself is quite simple, but if I were to expand on this project, I would like to introduce time data. Perhaps Mike Glennon earned so much with the Chicago Bears because he was with them longer. We can analyze how long he spends with a team on average. Perhaps we can also introduce performance data. There are plenty of factors beyond salary that we can look at to create a holistic data story. This is a chart I created grabbing data from Sportrac.com that had time data, total cash, and cumulative earnings.\n\n\n\n\n\n\nFrom this graphic, we can see that Mike Glennon was only playing with the Chicago Bears for one year. After that, we see his earnings get lower and lower. From this, we can make an educated guess that the Bears might have taken a chance on Mr. Glennon in 2017, but shortly after in 2018, he left for the Cardinals and team hopped every year afterwards. Cumulatively, Mike Glennon earned $32.5M."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Codes",
    "section": "",
    "text": "These are the codes used to create the graphics I made in R for the midterm project.\nCleanup\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.1     ✔ stringr   1.5.2\n✔ ggplot2   4.0.0     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nlibrary(readxl)\n\n# Read in Excel\nglennon = read_excel(\"C:/Users/Owner/Dropbox/My PC (DESKTOP-J87JN1F)/Documents/STAT 515/glennon.xlsx\")\n\nglennon2 = read_excel(\"C:/Users/Owner/Dropbox/My PC (DESKTOP-J87JN1F)/Documents/STAT 515/glennon2.xlsx\")\n\n# Data Type Cleanup\nx = c(\"Tampa Bay Buccaneers\", \"Chicago Bears\", \"Arizona Cardinals\", \"Oakland Raiders\", \"Jacksonville Jaguars\", \"New York Giants\")\nglennon = glennon %&gt;%\n  mutate_at(x, as.numeric)\n\n# Undo Scientific Notation\noptions(scipen = 999)\nstr(glennon)\n\ntibble [1 × 6] (S3: tbl_df/tbl/data.frame)\n $ Tampa Bay Buccaneers: num 3946782\n $ Chicago Bears       : num 18500000\n $ Arizona Cardinals   : num 5000000\n $ Oakland Raiders     : num 1865625\n $ Jacksonville Jaguars: num 1280132\n $ New York Giants     : num 1375000\n\n# Pivot Longer\nlong_glennon = glennon %&gt;%\n  pivot_longer(cols = x,\n               names_to = \"Team\",\n               values_to = \"Dollars\")\n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(x)\n\n  # Now:\n  data %&gt;% select(all_of(x))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\n# Add Player Column\nlong_glennon$Player = \"Mike Glennon\"\n\nRedesign 1\n\n# Redesign 1 - Classic Bar Chart\nplt1 = ggplot(long_glennon, aes(x = reorder(Team, Dollars), y = Dollars, fill = Team)) +\n  geom_bar(stat = \"identity\", color = \"black\") +\n  labs(title = \"Mike Glennon's Earning Percentage by Team\",\n       x = \"Team\",\n       y = \"Earnings %\") +\n  geom_text(aes(label = dollar(Dollars)), vjust = -0.5, size = 1.75) +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_fill_manual(values = c(\n    \"Tampa Bay Buccaneers\" = \"#D70100\",\n    \"Chicago Bears\" = \"#CA3700\",\n    \"Arizona Cardinals\" = \"#97233F\",\n    \"Oakland Raiders\" = \"#A5ACAF\",\n    \"Jacksonville Jaguars\" = \"#9F792C\",\n    \"New York Giants\" = \"#0B2265\")) + \n  theme(axis.text.x = element_text(size = 9, angle = 45, hjust = 1)) +\n  theme(axis.text.y = element_text(size = 9))\nplot(plt1)\n\n\n\n\n\n\n\n\nRedesign 2\n\n# Redesign 2 - Stacked Bar Chart\nlong_glennon$Team = reorder(long_glennon$Team, long_glennon$Dollars)\nplt2 = ggplot(long_glennon, aes(x = Player, y = Dollars, fill = Team,\n                                text = paste(\"Team: \", Team,\n                                              \"\\nEarnings: \", dollar(Dollars),\n                                              \"\\nPercentage: \", percent(Dollars/sum(Dollars))))) +\n              geom_bar(stat = \"identity\", position = \"fill\", color = \"black\") +\n              labs(title = \"Mike Glennon's Earnings by Team\",\n                    x = \"Teams\",\n                    y = \"Percentage Earnings\") +\n              scale_fill_manual(values = c(\n                \"Tampa Bay Buccaneers\" = \"#D70100\",\n                \"Chicago Bears\" = \"#CA3700\",\n                \"Arizona Cardinals\" = \"#97233F\",\n                \"Oakland Raiders\" = \"#A5ACAF\",\n                \"Jacksonville Jaguars\" = \"#9F792C\",\n                \"New York Giants\" = \"#0B2265\")) +\n              theme(axis.text.x = element_blank()) +\n              scale_y_continuous(labels = scales::percent)\n\ninteractive_plt2 = ggplotly(plt2, tooltip = \"text\")\ninteractive_plt2\n\n\n\n\n\nNext Steps Redesign\n\n# Next Steps\nplt3 = suppressWarnings(ggplot(glennon2, aes(x = Year, y = `Total Cash`, fill = Team))+\n  geom_bar(aes(text = paste(\"Team: \", Team,\n                            \"\\nCash Earnings: \",dollar(`Total Cash`))),\n          stat = \"identity\", \n          color = \"black\") +\n  geom_line(data = glennon2, aes(x = Year, y = `Cumulative Cash`),inherit.aes = FALSE, color = \"steelblue\") +\n  geom_point(data = glennon2, aes(x = Year, y = `Cumulative Cash`,\n                           text = paste(\"Cumulative Earnings: \", dollar(`Cumulative Cash`))),\n             inherit.aes = FALSE, color = \"steelblue\", size = 2) +\n  labs(title = \"Mike Glennon's Earnings Over Time\") +\n  scale_x_continuous(breaks = unique(glennon2$Year)) +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_fill_manual(values = c(\n    \"Tampa Bay Buccaneers\" = \"red\",\n    \"Chicago Bears\" = \"#E86100\",\n    \"Arizona Cardinals\" = \"#97233F\",\n    \"Oakland Raiders\" = \"#A5ACAF\",\n    \"Jacksonville Jaguars\" = \"#9F792C\",\n    \"New York Giants\" = \"#0B2265\")) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n)\n\ninteractive_plt3 = (ggplotly(plt3, tooltip = \"text\"))\ninteractive_plt3"
  },
  {
    "objectID": "dummy.html",
    "href": "dummy.html",
    "title": "References",
    "section": "",
    "text": "References - generated using MyBib\nHoltz, Y. (2025). Customize plotly tooltip. R-Graph-Gallery.com. https://r-graph-gallery.com/customize-plotly-tooltip.html\nSpotrac. (2025). Mike Glennon | NFL Contracts & Salaries | Spotrac.com. Spotrac.com. https://www.spotrac.com/nfl/player/earnings/_/id/12354/mike-glennon\nWTF Visualizations. (n.d.). Viz.wtf. https://viz.wtf/\n‌\n‌\n‌"
  }
]